<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	   default-lazy-init="true">

	<description>Spring Configuration</description>

	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy/>

	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
	<context:component-scan base-package="com.meixiang.beauty"><!-- base-package 如果多个，用“,”分隔 -->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
	</context:component-scan>

	<!-- enable autowire -->
	<context:annotation-config />

	<bean id="springMethodInterceptor" class="com.meixiang.beauty.sys.annotation.LoginRequiredInterceptor" ></bean>
	<aop:config>
		<!--切入点-->
		<aop:pointcut id="loginPoint"
					  expression="execution(public * com.meixiang.beauty.web..*.*(..)) "/>
		<!--在该切入点使用自定义拦截器-->
		<aop:advisor pointcut-ref="loginPoint" advice-ref="springMethodInterceptor"/>
	</aop:config>

</beans>